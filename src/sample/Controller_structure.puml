@startuml

/' diagram meta data start
config=StructureConfiguration;
{
  "projectClassification": {
    "searchMode": "OpenProject", // OpenProject, AllProjects
    "includedProjects": "",
    "pathEndKeywords": "*.impl",
    "isClientPath": "",
    "isClientName": "",
    "isTestPath": "",
    "isTestName": "",
    "isMappingPath": "",
    "isMappingName": "",
    "isDataAccessPath": "",
    "isDataAccessName": "",
    "isDataStructurePath": "",
    "isDataStructureName": "",
    "isInterfaceStructuresPath": "",
    "isInterfaceStructuresName": "",
    "isEntryPointPath": "",
    "isEntryPointName": ""
  },
  "graphRestriction": {
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "removeByInheritance": "", // inheritance/annotation based filtering is done in a second step
    "removeByAnnotation": "",
    "removeByClassPackage": "", // cleanup the graph after inheritance/annotation based filtering is done
    "removeByClassName": "",
    "cutMappings": false,
    "cutEnum": true,
    "cutTests": true,
    "cutClient": true,
    "cutDataAccess": false,
    "cutInterfaceStructures": false,
    "cutDataStructures": false,
    "cutGetterAndSetter": true,
    "cutConstructors": true
  },
  "graphTraversal": {
    "forwardDepth": 6,
    "backwardDepth": 6,
    "classPackageExcludeFilter": "",
    "classPackageIncludeFilter": "",
    "classNameExcludeFilter": "",
    "classNameIncludeFilter": "",
    "methodNameExcludeFilter": "",
    "methodNameIncludeFilter": "",
    "hideMappings": false,
    "hideDataStructures": false,
    "hidePrivateMethods": true,
    "hideInterfaceCalls": true, // indirection: implementation -> interface (is hidden) -> implementation
    "onlyShowApplicationEntryPoints": false // root node is included
  },
  "details": {
    "aggregation": "GroupByClass", // ByClass, GroupByClass, None
    "showClassGenericTypes": true,
    "showMethods": true,
    "showMethodParameterNames": true,
    "showMethodParameterTypes": true,
    "showMethodReturnType": true,
    "showPackageLevels": 2,
    "showDetailedClassStructure": true
  },
  "rootClass": "sample.Controller"
}
diagram meta data end '/



digraph g {
    rankdir="TB"
    splines=polyline
    

'nodes 
subgraph cluster_909675094 { 
   	label=sample
	labeljust=l
	fillcolor="#ececec"
	style=filled
   
   Controller909675094[
	label=<<TABLE BORDER="1" CELLBORDER="0" CELLPADDING="4" CELLSPACING="0">
<TR><TD ALIGN="LEFT" >(C)Controller</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" >-   CurrentPointsNum: Label [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   Errors: Label [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   GameResults: Label [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   InputBet: TextField [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   InputPrediction: TextField [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   NewGame_ResetPoints: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   Play: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   SaveInFile: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   ShowGameLog: Button [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   bet: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   current_points_num: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   date: Date [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   desktop: Desktop [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   dices_sum: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   errors_list: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   file: File [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   first_dice: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   location: URL [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   prediction: int [1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   random: Random [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >-   resources: ResourceBundle [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   results: String [0..1]</TD></TR>
<TR><TD ALIGN="LEFT" >#   second_dice: int [1]</TD></TR>
<HR/>
<TR><TD ALIGN="LEFT" ># initialize()</TD></TR>
</TABLE>>
	style=filled
	margin=0
	shape=plaintext
	fillcolor="#FFFFFF"
];
} 

'edges    

    
}
@enduml